@model AmbulancePCR.Models.PCREdit

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>PCREdit</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.PatientCareReportId)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.IncidentNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IncidentNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IncidentNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Disposition, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Disposition, new List<SelectListItem>
                {
                     new SelectListItem{ Text="", Value = "" },
                     new SelectListItem{ Text="Transported (Emergency)", Value = "Transported (Emergency)" },
                     new SelectListItem{ Text="Transported (Non-Emergent)", Value = "Transported (Non-Emergent)" },
                     new SelectListItem{ Text="Patient Refusal", Value = "Patient Refusal" },
                     new SelectListItem{ Text="Cancelled", Value = "Cancelled" },
                     new SelectListItem{ Text="No Treatment Required", Value = "No Treatment Required" },
                     new SelectListItem{ Text="No Patient Identified", Value = "No Patient Identified" },
                }, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Disposition, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SceneAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SceneAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SceneAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CmsLevel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CmsLevel, new List<SelectListItem>
                {
                     new SelectListItem{ Text="", Value = "" },
                     new SelectListItem{ Text="Basic Life Support (BLS)", Value = "Basic Life Support (BLS)" },
                     new SelectListItem{ Text="Basic Life Support (BLS) - Emergency", Value = "Basic Life Support (BLS) - Emergency" },
                     new SelectListItem{ Text="Advanced Life Support, Level 1 (ALS1)", Value = "Advanced Life Support, Level 1 (ALS1)" },
                     new SelectListItem{ Text="Advanced Life Support, Level 1 (ALS1) - Emergency", Value = "Advanced Life Support, Level 1 (ALS1) - Emergency" },
                     new SelectListItem{ Text="Advanced Life Support, Level 2 (ALS2)", Value = "Advanced Life Support, Level 2 (ALS2)" },
                     new SelectListItem{ Text="Specialty Care Transport (SCT)", Value = "Specialty Care Transport (SCT)" },
                     new SelectListItem{ Text="Paramedic Intercept (PI)", Value = "Paramedic Intercept (PI)" },
                }, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CmsLevel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VehicleNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VehicleNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VehicleNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IncidentDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IncidentDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IncidentDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UnitNotified, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UnitNotified, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitNotified, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EnRoute, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EnRoute, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EnRoute, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OnScene, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OnScene, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OnScene, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Transporting, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Transporting, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Transporting, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Destination, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Destination, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.InService, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.InService, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.InService, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PrimaryCareProvider, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PrimaryCareProvider, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PrimaryCareProvider, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AmbulanceDriver, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AmbulanceDriver, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AmbulanceDriver, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LoadMileage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LoadMileage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LoadMileage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DestinationAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DestinationAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DestinationAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Type, new List<SelectListItem>
                {
                     new SelectListItem{ Text="", Value = "" },
                     new SelectListItem{ Text="Hospital (Emergency Room Bed)", Value = "Hospital (Emergency Room Bed)" },
                     new SelectListItem{ Text="Hospital (Non-Emergency Room Bed)", Value = "Hospital (Non-Emergency Room Bed)" },
                     new SelectListItem{ Text="Nursing Home/Skilled Nursing Facility", Value = "Nursing Home/Skilled Nursing Facility" },
                     new SelectListItem{ Text="Psychiatric Hospital", Value = "Psychiatric Hospital" },
                     new SelectListItem{ Text="Medical Office/Clinic", Value = "Medical Office/Clinic" },
                     new SelectListItem{ Text="Residence", Value = "Residence" },
                     new SelectListItem{ Text="Hospice", Value = "Hospice" },
                     new SelectListItem{ Text="Other", Value = "Other" },
                }, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PtPosition, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.PtPosition, new List<SelectListItem>
                {
                     new SelectListItem{ Text="", Value = "" },
                     new SelectListItem{ Text="Supine", Value = "Supine" },
                     new SelectListItem{ Text="Prone", Value = "Prone" },
                     new SelectListItem{ Text="Right Lateral Recumbent", Value = "Right Lateral Recumbent" },
                     new SelectListItem{ Text="Left Lateral Recumbent", Value = "Left Lateral Recumbent" },
                     new SelectListItem{ Text="Fowler's", Value = "Fowler's" },
                     new SelectListItem{ Text="Semi-Fowler's", Value = "Semi-Fowler's" },
                     new SelectListItem{ Text="Trendelenberg", Value = "Trendelenberg" },
                     new SelectListItem{ Text="Sitting", Value = "Sitting" },
                }, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PtPosition, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PrimarySymptom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PrimarySymptom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PrimarySymptom, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PrimaryImpression, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PrimaryImpression, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PrimaryImpression, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SecondaryImpression, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SecondaryImpression, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SecondaryImpression, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AlcDrugUse, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AlcDrugUse, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AlcDrugUse, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PCRNarrative, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.PCRNarrative, new { htmlAttributes = new { @class = "form-control", rows = "8" } })
            @Html.ValidationMessageFor(model => model.PCRNarrative, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReportingCrewMember, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReportingCrewMember, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReportingCrewMember, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PtFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PtFirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PtFirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PtLastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PtLastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PtLastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PtAge, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PtAge, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PtAge, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PtDateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PtDateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PtDateOfBirth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PtGender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.PtGender, new List<SelectListItem>
                {
                     new SelectListItem{ Text="", Value = "" },
                     new SelectListItem{ Text="Male", Value = "Male" },
                     new SelectListItem{ Text="Female", Value = "Female" },
                     new SelectListItem{ Text="Other", Value = "Other" }
                }, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PtGender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PtWeight, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PtWeight, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PtWeight, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PatientAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PatientAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PatientAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PtPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PtPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PtPhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PtSSN, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PtSSN, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PtSSN, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PtHistory, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PtHistory, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PtHistory, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PtAdvanceDirectives, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PtAdvanceDirectives, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PtAdvanceDirectives, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PtAllergiesMeds, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PtAllergiesMeds, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PtAllergiesMeds, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PtAllergiesOther, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PtAllergiesOther, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PtAllergiesOther, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PtMedications, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PtMedications, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PtMedications, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SystolicBloodPressure, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SystolicBloodPressure, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SystolicBloodPressure, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DiastolicBloodPressure, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DiastolicBloodPressure, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DiastolicBloodPressure, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HeartRate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HeartRate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HeartRate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RespiratoryRate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RespiratoryRate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RespiratoryRate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RespEffort, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RespEffort, new List<SelectListItem>
                {
                     new SelectListItem{ Text="", Value = "" },
                     new SelectListItem{ Text="Normal", Value = "Normal" },
                     new SelectListItem{ Text="Apnea", Value = "Apnea" },
                     new SelectListItem{ Text="Dyspnea", Value = "Dyspnea" },
                     new SelectListItem{ Text="Hypoventilation", Value = "Hypoventilation" },
                     new SelectListItem{ Text="Hyperventilation", Value = "Hyperventilation" },
                     new SelectListItem{ Text="Tachypnea", Value = "Tachypnea" },
                     new SelectListItem{ Text="Kussmaul", Value = "Kussmaul" },
                     new SelectListItem{ Text="Cheyne-Stokes", Value = "Cheyne-Stokes" },
                     new SelectListItem{ Text="Biot", Value = "Biot" },
                     new SelectListItem{ Text="Apneustic", Value = "Apneustic" }
                }, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RespEffort, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rhythm, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Rhythm, new List<SelectListItem>
                {
                     new SelectListItem{ Text="", Value = "" },
                     new SelectListItem{ Text="Normal", Value = "Normal" },
                     new SelectListItem{ Text="Tachycardia", Value = "Tachycardia" },
                     new SelectListItem{ Text="Bradycardia", Value = "Bradycardia" },
                     new SelectListItem{ Text="Atrial Fibrillation", Value = "Atrial Fibrillation" },
                     new SelectListItem{ Text="Atrial Flutter", Value = "Atrial Flutter" },
                     new SelectListItem{ Text="Ventricular Fibrillation", Value = "Ventricular Fibrillation" },
                     new SelectListItem{ Text="Ventricular Flutter", Value = "Ventricular Flutter" },
                     new SelectListItem{ Text="Extrasystole", Value = "Extrasystole" },
                     new SelectListItem{ Text="Asystole", Value = "Asystole" }
                }, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Rhythm, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BPMethod, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.BPMethod, new List<SelectListItem>
                {
                     new SelectListItem{ Text="", Value = "" },
                     new SelectListItem{ Text="Manual-Auscultated", Value = "Manual-Auscultated" },
                     new SelectListItem{ Text="Automated-Cuff", Value = "Automated-Cuff" },
                     new SelectListItem{ Text="Palpated", Value = "Palpated" },
                }, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BPMethod, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HRType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.HRType, new List<SelectListItem>
                {
                     new SelectListItem{ Text="", Value = "" },
                     new SelectListItem{ Text="Pulse-Oximeter", Value = "Pulse-Oximeter" },
                     new SelectListItem{ Text="Palpated", Value = "Palpated" },
                     new SelectListItem{ Text="3-Lead ECG", Value = "3-Lead ECG" },
                     new SelectListItem{ Text="5-Lead ECG", Value = "5-Lead ECG" },
                     new SelectListItem{ Text="12-Lead ECG", Value = "12-Lead ECG" }
                }, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.HRType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Oximetry, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Oximetry, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Oximetry, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GCSVerbal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.GCSVerbal, new List<SelectListItem>
                {
                     new SelectListItem{ Text="", Value = "" },
                     new SelectListItem{ Text="Oriented - 5", Value = "5" },
                     new SelectListItem{ Text="Confused - 4", Value = "4" },
                     new SelectListItem{ Text="Inappropriate Words - 3", Value = "3" },
                     new SelectListItem{ Text="Incomprehensible Sounds - 2", Value = "2" },
                     new SelectListItem{ Text="No Verbal Response", Value = "1" }
                }, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.GCSVerbal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GCSMotor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.GCSMotor, new List<SelectListItem>
                {
                     new SelectListItem{ Text="", Value = "" },
                     new SelectListItem{ Text="Obeys Commands - 6", Value = "6" },
                     new SelectListItem{ Text="Localizes Pain - 5", Value = "5" },
                     new SelectListItem{ Text="Withdraws From Pain - 4", Value = "4" },
                     new SelectListItem{ Text="Flexion Response to Pain - 3", Value = "3" },
                     new SelectListItem{ Text="Extension Response to Pain - 2", Value = "2" },
                     new SelectListItem{ Text="No Motor Response", Value = "1" }
                }, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.GCSMotor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GCSEyes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.GCSEyes, new List<SelectListItem>
                {
                     new SelectListItem{ Text="", Value = "" },
                     new SelectListItem{ Text="Eyes Open Spontaneously - 4", Value = "4" },
                     new SelectListItem{ Text="Eye Opening to Verbal Command - 3", Value = "3" },
                     new SelectListItem{ Text="Eye Opening to Pain - 2", Value = "2" },
                     new SelectListItem{ Text="No Response", Value = "1" }
                }, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.GCSEyes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BloodGlucose, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BloodGlucose, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BloodGlucose, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Temperature, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Temperature, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Temperature, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VitalSignsTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VitalSignsTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VitalSignsTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
